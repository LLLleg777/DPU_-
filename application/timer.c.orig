#include "timer.h"
#include "tim.h"
#include "pid.h"
#include "app_can.h"
#include "app_usart.h"
#include "DR16.h"
#include "move.h"

/*****微秒延时***/
#define DLY_TIM_Handle  (&htim14) //微秒延时句柄
int TIM2_mode = 1;
int TIM3_mode = 1;
int TIM6_mode = 1;
float turn_out=0;
float PWM_out=0;
float Car_v=0;
float Car_corner=0;

int t1, t_1, t2, t_2, t_Accel, Accelt, t_text, textt;//时间计算
//实际测量每50us大约差0.24us
void delay_us(uint16_t nus)
{
    __HAL_TIM_SET_COUNTER(DLY_TIM_Handle, 0);
    __HAL_TIM_ENABLE(DLY_TIM_Handle);

    while (__HAL_TIM_GET_COUNTER(DLY_TIM_Handle) < nus)
    {
    }

    __HAL_TIM_DISABLE(DLY_TIM_Handle);
}
void delay_ms(uint16_t nms)
{
    uint32_t i;

    for(i = 0; i < nms; i++)
        delay_us(1000);
}
/*************微秒延时结束***********/
/****************定时器回调函数*********/
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
    if(htim->Instance == TIM2)
    {
        TIM2_int(TIM2_mode);

    }

    if(htim->Instance == TIM3)
    {
        TIM3_int(TIM3_mode);

    }
    if(htim->Instance == TIM6)
    {
        TIM6_int(TIM6_mode);

    }
}
/**
* @name 	    TIM2_int
* @brief  		定时器2输入初始化
* @param     mode：1：开启所有 else：none
* @param
* @param
* @retval
*/
void TIM2_int(u8 mode)
{
    if(mode == 1)
    {
        PWM_out=Velocity_NEW(m3508[0].speed,m3508[1].speed,-6000*Car_v)+Vertical_Init2(-6.55,angle.Roll,angle.Rollspeed,0);
        turn_out= PID_turnloop(30,-90*Car_corner);
        m3508set[0].num= PWM_out+turn_out;
        m3508set[1].num= -PWM_out+turn_out;
        can1_cmd1(m3508set[0].num,m3508set[1].num,0,0);

    }

  else
    {
          m3508set[0].num = (int16_t)PID_motoloop(&Motor_PID[0], &m3508[0],m3508set[0].setspeed,m3508set[0].setpos);//3508
          m3508set[1].num = (int16_t)PID_motoloop(&Motor_PID[1], &m3508[1],m3508set[1].setspeed,m3508set[1].setpos);//3508
          can1_cmd1(m3508set[0].num,m3508set[1].num,0,0);

    }

}

void TIM3_int(u8 mode)
{
    if(mode == 1)
    {


        m5065set[1].num  = PID_moto5065(&N5065_PID[1], &m5065[1],  m5065set[1].setspeed);
      
//        m3508set[0].num = (int16_t)PID_motoloop(&Motor_PID[0], &m3508[0],m3508set[0].setspeed,m3508set[0].setpos);//3508
//        m3508set[1].num = (int16_t)PID_motoloop(&Motor_PID[1], &m3508[1],m3508set[1].setspeed,m3508set[1].setpos);//3508
      
        m3508set[4].num = (int16_t)PID_motoloop(&Motor_PID[2], &m3508[4],m3508set[4].setspeed,m3508set[4].setpos);//2006
        m3508set[5].num = (int16_t)PID_motoloop(&Motor_PID[2], &m3508[5],m3508set[5].setspeed,m3508set[5].setpos);//2006
        m3508set[6].num = (int16_t)PID_motoloop(&Motor_PID[2], &m3508[6],m3508set[6].setspeed,m3508set[6].setpos);//2006
      
        can1_cmd1(m3508set[0].num,m3508set[1].num,0,0);
        can1_cmd2(m3508set[4].num,m3508set[5].num,m3508set[6].num,0);
        comm_can_set_rpm(1,m5065set[1].num);//u3
    }
    else
    {
    }
}

void TIM6_int(u8 mode)
{
    if(mode == 1)

    {

        //时间计算
        if(t_1 == 1)
            t1++;
        else
            t1 = 0;

        if(t_2 == 1)
            t2++;
        else
            t2 = 0;

        if(t_Accel == 1)
            Accelt++;
        else
            Accelt = 9999;

        if(t_text == 1)
            textt++;
        else
            textt = 0;
    }
    else
    {
    }


}
